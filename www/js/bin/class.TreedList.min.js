if(void 0===OGX)var OGX=function(){};OGX.TreedList=function(e){"use strict";var r=this,o={renderer:"Tree",list:new OGX.List,types:null,group_by:null,group_mode:null,group_param:null},i=e,n=null;function t(){var e,r,o;switch(i.renderer){case"Tree":r={container:i.container,tree:e},i.types&&(r.types=i.types),r.tree=(function e(r,o){if(Array.isArray(r)){for(var t=0;t<r.length;t++)r[t].type="file";o.items=r}else for(var i in r)r[i],o.items.push({type:"folder",label:i,state:"open",items:[]}),e(r[i],o.items[o.items.length-1])}(n,o={type:"root",label:"root",state:"open",items:[]}),o),new OGX.Tree(r);break;case"StackedTree":e=void 0}}function s(e,r,o,t){i.list=e,void 0!==r&&(i.group_by=r),void 0!==o&&(i.group_mode=o),void 0!==t&&(i.group_param=t),n=i.list.group(i.group_by,i.group_mode,i.group_param)}this._NAME_=OGX.TreedList.NAME,this.el=null,this.val=function(e,r,o,t){return void 0!==e&&s(e),n},function(){if(void 0!==OGX.List){switch(function(){for(var e in i&&void 0!==i||(i={}),o)i.hasOwnProperty(e)||(i[e]=o[e]);i.list.hasOwnProperty("insert")||(i.list=new OGX.List(i.list)),r.el=$(i.container)}(),s(i.list),i.renderer){case"StackedTree":if(void 0===OGX.StackedTree)return console.log("%c CRITICAL ERROR - OGX.StackedTree not found! ","background:#222; color: #FF0000");break;case"Tree":if(void 0===OGX.Tree)return console.log("%c CRITICAL ERROR - OGX.Tree not found! ","background:#222; color: #FF0000")}t()}else console.log("%c CRITICAL ERROR - OGX.List not found! ","background:#222; color: #FF0000")}()},OGX.TreedList.NAME="OgxTreedList";